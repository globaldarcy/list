---
import Layout from '../layouts/Layout.astro';
---

<Layout title="V1 Photo Justified Layout">
    <main>
        <div id="container">
            <div class="grid">
                <div class="grid-item">
                    <img src="img/photos/1.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/2.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/3.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/4.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/5.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/6.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/7.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/8.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/9.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/10.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/11.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/12.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/13.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/14.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/15.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/16.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/17.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/18.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/19.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/20.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/21.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/22.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/23.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/24.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/49.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/49.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/49.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/5.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/6.jpg" />
                </div>
                <div class="grid-item">
                    <img src="img/photos/24.jpg" />
                </div>
            </div>
        </div>
    </main>
</Layout>

<style>
    #container {
        margin: 0 auto;
        max-width: 900px;
        padding: 80px 0 150px;
    }
    .grid {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        row-gap: 9px;
        justify-content: space-between;
    }

    .grid-item {
        height: 0;
        overflow: hidden;
    }

    .grid-item img {
        width: 100%;
        display: block;
        background-color: #f5f8fa;
    }
</style>

<script>
    function waterfall(grid, item, column) {
        const container = document.getElementById('container');
        const containerWidth = container.clientWidth;
        const $grid = document.querySelector(grid);
        const $item = Array.from(document.querySelectorAll(item));
        const $gap = window.getComputedStyle($grid).rowGap;

        const gapValue = parseFloat($gap);
        const adjustedContainerWidth = containerWidth - (column - 1) * gapValue;

        if ($item.length % column !== 0) {
            const additionalItemsNeeded = column - ($item.length % column);
            for (let n = 0; n < additionalItemsNeeded; n++) {
                const div = document.createElement('div');
                div.className = 'grid-item';
                $grid.appendChild(div);
            }
        }

        const updatedItems = Array.from(document.querySelectorAll(item));

        for (let i = 0; i < updatedItems.length; i += column) {
            const hightArray = [];
            let sumRatio = 0;
            for (let j = i; j < i + column && j < updatedItems.length; j++) {
                const img = updatedItems[j].querySelector('img');
                // console.log(img.naturalWidth, img.naturalHeight);
                const ratio = img ? img.naturalWidth / img.naturalHeight : 1.5;
                updatedItems[j].style.setProperty('--ratio', ratio);
                sumRatio += +updatedItems[j].style.getPropertyValue('--ratio');
            }

            const widthRatio = adjustedContainerWidth / sumRatio;
            for (let k = i; k < i + column && k < updatedItems.length; k++) {
                updatedItems[k].style.height = '';
                const width = (widthRatio * +updatedItems[k].style.getPropertyValue('--ratio')).toFixed(0) + 'px';
                updatedItems[k].style.width = width;
                const img = updatedItems[k].querySelector('img');
                const height = img ? img.offsetHeight : 1000;
                hightArray.push(height);
            }

            const minHeight = Math.min(...hightArray);
            for (let l = i; l < i + column && l < updatedItems.length; l++) {
                updatedItems[l].style.height = minHeight.toFixed(0) + 'px';
            }
        }
    }

    // waterfall('.grid', '.grid-item', 3);

    document.addEventListener('DOMContentLoaded', function () {
        waterfall('.grid', '.grid-item', 3);
    });

    window.addEventListener('resize', function () {
        waterfall('.grid', '.grid-item', 3);
    });
</script>
